variables:
  AWS_BUILD_SUBDIR: indexer-queue-aws/build-aws
  AWS_TEST_SUBDIR: indexer-queue-aws
  AWS_SERVICE: indexer-queue
  AWS_ENVIRONMENT: dev
  AWS_DEPLOY_TARGET: EKS
  AWS_EKS_DEPLOYMENT_NAME: indexer-queue

  IBM_BUILD_SUBDIR: indexer-queue-ibm

  AZURE_SERVICE: indexer-queue
  AZURE_BUILD_SUBDIR: indexer-queue-azure-enqueue
  AZURE_TEST_SUBDIR: testing/indexer-queue-azure-enqueue

  GCP_BUILD_SUBDIR: indexer-queue-gcp
  GCP_INT_TEST_SUBDIR: indexer-queue-gcp # Fix as soon as integration tests are added
  GCP_APPLICATION_NAME: osdu-indexer-queue
  GCP_ENVIRONMENT: testing
  GCP_PROJECT: opendes-evt
  GCP_TENANT_NAME: opendesevt
  GCP_DEPLOY_ENV: p4d
  GCP_DOMAIN: cloud.slb-ds.com

  OSDU_GCP_BUILD_SUBDIR: indexer-queue-gcp
  OSDU_GCP_INT_TEST_SUBDIR: indexer-queue-gcp # Fix as soon as integration tests are added
  OSDU_GCP_ENVIRONMENT: osdu-gcp
  OSDU_GCP_TENANT_NAME: osdu
  OSDU_GCP_SERVICE: indexer-queue
  OSDU_GCP_APPLICATION_NAME: indexer-queue
  OSDU_GCP_VENDOR: gcp-cloudrun
  OSDU_GCP_HELM_PACKAGE_CHARTS: "devops/gcp/deploy devops/gcp/configmap"
  OSDU_GCP_HELM_CONFIG_SERVICE: indexer-queue-config
  OSDU_GCP_HELM_DEPLOYMENT_SERVICE: indexer-queue-deploy
  OSDU_GCP_HELM_CONFIG_SERVICE_VARS: "--set data.log_level=DEBUG --set data.osdu_entitlements_url=$OSDU_GCP_AUTHORIZE_API --set data.google_cloud_project=$OSDU_GCP_PROJECT --set data.google_cloud_project_region=$OSDU_GCP_CLOUDRUN_REGION --set data.cloud_task_target_host=$OSDU_GCP_CLOUD_TASK_TARGET_HOST --set data.partition_api=$OSDU_GCP_PARTITION_API --set data.google_audiences=$GOOGLE_AUDIENCE --set data.indexer_queue_identifier=$OSDU_GCP_INDEXER_QUEUE_CLOUDTASK_NAME"
  OSDU_GCP_HELM_CONFIG_SERVICE_VARS_DEV2: "--set data.log_level=DEBUG --set data.osdu_entitlements_url=$OSDU_GCP_AUTHORIZE_API --set data.google_cloud_project=$OSDU_GCP_PROJECT --set data.google_cloud_project_region=$OSDU_GCP_CLOUDRUN_REGION --set data.cloud_task_target_host=$OSDU_GCP_CLOUD_TASK_TARGET_HOST --set data.partition_api=$OSDU_GCP_PARTITION_API --set data.google_audiences=$GOOGLE_AUDIENCE --set data.indexer_queue_identifier=$OSDU_GCP_INDEXER_QUEUE_CLOUDTASK_NAME"
  OSDU_GCP_HELM_DEPLOYMENT_SERVICE_VARS: "--set data.image=$CI_REGISTRY_IMAGE/osdu-gcp:$CI_COMMIT_SHORT_SHA --set data.serviceAccountName=$OSDU_GCP_SERVICE-k8s"

include:
  - project: "osdu/platform/ci-cd-pipelines"
    file: "standard-setup.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "build/maven.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "scanners/fossa-maven.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "scanners/gitlab-ultimate.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "cloud-providers/aws-global.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "cloud-providers/aws-maven.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "cloud-providers/ibm-deploy-only.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "cloud-providers/azure.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "publishing/pages.yml"

  - project: "osdu/platform/ci-cd-pipelines"
    file: "cloud-providers/osdu-gcp-gke.yml"

osdu-gcp-containerize-gcloud:
  stage: containerize
  needs: ["compile-and-unit-test"]
  extends: .osdu-gcp-variables
  image: google/cloud-sdk
  cache: {}
  script:
    - gcloud auth activate-service-account --key-file $OSDU_GCP_DEPLOY_FILE
    - gcloud config set project $OSDU_GCP_PROJECT
    - touch .gcloudignore
    - gcloud builds submit --config $OSDU_GCP_SERVICE-$OSDU_GCP_VENDOR/cloudbuild/cloudbuild.yaml --substitutions=_GCP_SERVICE=$OSDU_GCP_SERVICE,_APPLICATION_NAME=$OSDU_GCP_APPLICATION_NAME,_PROVIDER_NAME=$OSDU_GCP_VENDOR,_SHORT_SHA=$CI_COMMIT_SHORT_SHA,_PORT=$OSDU_GCP_PORT
  rules:
    - if: $OSDU_GCP == 'true'

osdu-gcp-containerize-gitlab:
  stage: containerize
  needs: ["compile-and-unit-test"]
  tags: ["osdu-medium"]
  extends: .osdu-gcp-variables
  image: docker:19.03
  cache: {}
  allow_failure: true
  script:
    - export EXTRA_DOCKER_TAG=""; if [ "$CI_COMMIT_TAG" != "" ] ; then EXTRA_DOCKER_TAG="-t $CI_REGISTRY_IMAGE/osdu-gcp:$CI_COMMIT_TAG" ; elif [ "$CI_COMMIT_REF_NAME" = "master" ] ; then EXTRA_DOCKER_TAG="-t $CI_REGISTRY_IMAGE/osdu-gcp:latest" ; fi
    - docker build -t $OSDU_GCP_LOCAL_IMAGE_TAG_SHA $EXTRA_DOCKER_TAG --file $OSDU_GCP_SERVICE-$OSDU_GCP_VENDOR/cloudbuild/Dockerfile.cloudbuild --build-arg PROVIDER_NAME=$OSDU_GCP_VENDOR --build-arg PORT=$OSDU_GCP_PORT .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/osdu-gcp
  rules:
    - if: $OSDU_GCP == 'true'

osdu-gcp-test:
  extends:
    - .maven
    - .osdu-gcp-variables
  stage: integration
  needs: ["osdu-gcp-deploy-deployment"]
  allow_failure: true
  script:
    - echo "This is a stub. Integration tests are not implemented for the Indexer-Queue service."
    - exit 1

osdu-gcp-dev2-test:
  extends:
    - .maven
    - .osdu-gcp-dev2-variables
  stage: integration
  needs: ["osdu-gcp-dev2-deploy-deployment"]
  allow_failure: true
  script:
    - echo "This is a stub. Integration tests are not implemented for the Indexer-Queue service."
    - exit 1
